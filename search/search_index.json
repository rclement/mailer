{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mailer","text":"<p>Dead-simple mailer micro-service for static websites</p>  <p>    </p>  <p>A free and open-source software alternative to contact form services such as FormSpree, to integrate a contact form seamlessly within your next static website!</p> <p>When building static websites and JAMStack web applications, the need for a contact form arises pretty often but requires some server-side processing. <code>mailer</code> provides a dead-simple micro-service (usable as a serverless function) for this purpose, enabling one to receive e-mails from a simple form using a single request, be it URL-encoded or AJAX.</p> <p>Proudly developed in Python using the FastAPI ASGI framework.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Self-hostable micro-service</li> <li>Docker and serverless support</li> <li>Unicode message support</li> <li>OpenAPI documentation (Swagger and ReDoc)</li> <li>CORS domain validation</li> <li>Spam-bot filtering with honeypot field</li> <li>Google ReCaptcha v2 validation</li> <li>Sentry crash reporting</li> <li>Any SMTP-compatible back-end is supported</li> <li>PGP encryption support using PGP/MIME</li> </ul>"},{"location":"#license","title":"License","text":"<p>Licensed under GNU Affero General Public License v3.0 (AGPLv3)</p> <p>Copyright (c) 2018 - present  Romain Clement</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Use Python 3.10.8</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#0102-2022-08-28","title":"0.10.2 - 2022-08-28","text":""},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Use Python 3.10.6</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#0101-2022-02-18","title":"0.10.1 - 2022-02-18","text":""},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Use Python 3.9.10</li> <li>Fix form link in homepage template</li> <li>Remove duplicate honeypot validation</li> <li>Move documentation to https://rclement.github.io/mailer/</li> <li>Disable Renovate dependency dashboard</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#0100-2021-09-18","title":"0.10.0 - 2021-09-18","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>New API endpoint for URL-encoded form requests</li> <li>Type hints for tests</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Use Python 3.9.7</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#091-2021-06-17","title":"0.9.1 - 2021-06-17","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>1-click deployment buttons to README and documentation (Vercel and Heroku)</li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>Use Python 3.8.10</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#090-2021-05-01","title":"0.9.0 - 2021-05-01","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Allow to force HTTPS redirect using <code>FORCE_HTTPS</code> (enabled by default)</li> </ul>"},{"location":"changelog/#changed_5","title":"Changed","text":"<ul> <li>Use Python 3.8.9</li> <li>Use <code>python-slim</code> instead of <code>python-alpine</code> base for Docker image</li> <li>Use <code>mkdocs</code> for documentation</li> <li>Rename all Zeit Now references to Vercel</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#081-2020-05-21","title":"0.8.1 - 2020-05-21","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>OpenAPI documentation for return model in <code>/api/</code> route</li> </ul>"},{"location":"changelog/#changed_6","title":"Changed","text":"<ul> <li>Use Python 3.8.3</li> <li>Update dependencies</li> <li>More robust CORS origins testing</li> <li>Stricter <code>mypy</code> rules</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Better handling of <code>.env</code> file loading for development and testing</li> </ul>"},{"location":"changelog/#080-2020-04-11","title":"0.8.0 - 2020-04-11","text":""},{"location":"changelog/#changed_7","title":"Changed","text":"<ul> <li>Use Python 3.8.2</li> <li>Use FastAPI instead of Flask</li> <li>Renamed API parameter <code>recaptcha</code> to <code>g-recaptcha-response</code> (default name from Google ReCaptcha)</li> <li>Set maximum message length to 1000 characters</li> <li>Disable Swagger UI in production</li> <li>Licensed under AGPLv3</li> </ul>"},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Docsify documentation</li> <li>Simple homepage with API documentation link</li> <li>SMTP mailing backend support (all <code>SMTP_*</code> configurations)</li> <li>PGP encryption support using PGP/MIME (with optional contact PGP public key attachment)</li> <li>Static typing analysis using mypy</li> <li>Security checks using bandit</li> <li>Exhaustive testing</li> <li>Simple examples (ajax, ajax with recaptcha, ajax with pgp)</li> <li>GitHub Action workflows support</li> <li>Security notice in <code>SECURITY.md</code></li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>BREAKING: removed rate-limiting feature (all <code>RATELIMIT_*</code> configurations)</li> <li>BREAKING: removed mailer provider feature (<code>MAILER_PROVIDER</code> configuration)</li> <li>BREAKING: removed sendgrid provider feature (all <code>SENDGRID_*</code> configurations)</li> <li>Removed <code>RECAPTCHA_SITE_KEY</code> from configuration</li> <li>Removed <code>RECAPTCHA_ENABLED</code> from configuration (automatically enabled when <code>RECAPTCHA_SECRET_KEY</code> is set)</li> <li>Removed <code>SENTRY_ENABLED</code> from configuration (automatically enabled when <code>SENTRY_DSN</code> is set)</li> <li>Travis-CI support</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Use non-root user in <code>Dockerfile</code></li> <li>Use allowlist mode for <code>.nowignore</code></li> </ul>"},{"location":"changelog/#071-2019-07-22","title":"0.7.1 - 2019-07-22","text":""},{"location":"changelog/#changed_8","title":"Changed","text":"<ul> <li>Update Python dependencies</li> </ul>"},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>Use <code>flake8</code> as linter, <code>black</code> as code formatter</li> <li>Use <code>pre-commit</code> for git hooks support</li> </ul>"},{"location":"changelog/#070-2019-06-23","title":"0.7.0 - 2019-06-23","text":""},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Force HTTPS protocol even behind reverse-proxies</li> </ul>"},{"location":"changelog/#changed_9","title":"Changed","text":"<ul> <li>Update Python dependencies</li> <li>Rename <code>mailer.services</code> package to <code>mailer.providers</code></li> <li>BREAKING: rename <code>MAILER_SERVICE</code> config to <code>MAILER_PROVIDER</code></li> </ul>"},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>BREAKING: add <code>SENDER_EMAIL</code> config to specify the e-mail to send from (e.g. <code>no-reply@domain.me</code>)</li> </ul>"},{"location":"changelog/#062-2019-05-30","title":"0.6.2 - 2019-05-30","text":""},{"location":"changelog/#changed_10","title":"Changed","text":"<ul> <li>Update Python dependencies</li> <li>Migrate to Zeit Now official Python WSGI builder</li> </ul>"},{"location":"changelog/#061-2019-04-29","title":"0.6.1 - 2019-04-29","text":""},{"location":"changelog/#security","title":"Security","text":"<ul> <li>Update Python dependencies</li> <li>Fix <code>jinja2</code> vulnerability (CVE-2019-10906)</li> <li>Fix <code>urllib3</code> vulnerability (CVE-2019-11324)</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Fix <code>sendgrid</code> &gt;= <code>6.0.0</code> breaking changes</li> </ul>"},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>Travis-CI deployment to Zeit Now serverless platform</li> </ul>"},{"location":"changelog/#060-2019-03-28","title":"0.6.0 - 2019-03-28","text":""},{"location":"changelog/#security_1","title":"Security","text":"<ul> <li>Fix <code>webargs</code> vulnerability (CVE-2019-9710)</li> </ul>"},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Werkzeug deprecation warning for <code>ProxyFix</code></li> </ul>"},{"location":"changelog/#added_8","title":"Added","text":"<ul> <li>Swagger OpenAPI documentation</li> <li>Sentry crash reporting support</li> </ul>"},{"location":"changelog/#removed_1","title":"Removed","text":"<ul> <li><code>SECRET_KEY</code> secret config (unused)</li> <li><code>SERVER_NAME</code> config (unused)</li> </ul>"},{"location":"changelog/#050-2019-01-20","title":"0.5.0 - 2019-01-20","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li>Google ReCaptcha v2 validation</li> <li>Disabling rate-limiting</li> </ul>"},{"location":"changelog/#changed_11","title":"Changed","text":"<ul> <li>README.md with complete list of environment variables for configuration</li> </ul>"},{"location":"changelog/#040-2019-01-10","title":"0.4.0 - 2019-01-10","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li>Zeit Now 2.0 serverless/lambda deployment compatibility!</li> </ul>"},{"location":"changelog/#changed_12","title":"Changed","text":"<ul> <li>Update Python dependencies</li> <li>API info endpoint (<code>/api</code>) exempted from rate-limiting and returns some more information</li> </ul>"},{"location":"changelog/#030-2019-01-10","title":"0.3.0 - 2019-01-10","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>Add optional <code>honeypot</code> param for spam-bot protection</li> </ul>"},{"location":"changelog/#020-2019-01-09","title":"0.2.0 - 2019-01-09","text":""},{"location":"changelog/#added_12","title":"Added","text":"<ul> <li>Add CHANGELOG.md</li> </ul>"},{"location":"changelog/#changed_13","title":"Changed","text":"<ul> <li>Update Python dependencies</li> <li>Update .example.env</li> <li>Update default route rate-limiting rule to 10 per hour</li> </ul>"},{"location":"changelog/#010-2018-12-21","title":"0.1.0 - 2018-12-21","text":""},{"location":"changelog/#added_13","title":"Added","text":"<ul> <li>Initial release of <code>mailer</code></li> <li>Sendgrid mailing provider support</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#setup","title":"Setup","text":"<pre><code>pipenv install -d\npipenv run pre-commit install --config .pre-commit-config.yml\npipenv run inv qa\n</code></pre>"},{"location":"contributing/#running-locally","title":"Running locally","text":"<ol> <li> <p>Set and load environment variables: <pre><code>cp .example.env .env\nedit .env\npipenv shell\n</code></pre></p> </li> <li> <p>Run dev server: <pre><code>uvicorn mailer.app:app --host 0.0.0.0 --port 8000\n</code></pre> or if using VSCode, use the following configuration in <code>.vscode/launch.json</code>: <pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"mailer:app\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"module\": \"uvicorn\",\n      \"args\": [\"--host=0.0.0.0\", \"--port=8000\", \"mailer:app\"],\n      \"envFile\": \"\",\n      \"justMyCode\": false\n    },\n    {\n      \"name\": \"mailer:tests\",\n      \"type\": \"python\",\n      \"request\": \"test\",\n      \"justMyCode\": false\n    }\n  ]\n}\n</code></pre></p> </li> <li> <p>Try it: <pre><code>http GET http://localhost:8000/\nhttp POST http://localhost:8000/api/mail \\\n    Origin:http://localhost:8000 \\\n    email=\"john@doe.com\" \\\n    name=\"John Doe\" \\\n    subject=\"Test \ud83d\udcab\" \\\n    message=\"Hello \ud83d\udc4b\" \\\n    honeypot=\"\"\n</code></pre></p> </li> <li> <p>Open the Swagger OpenAPI documentation at http://localhost:8000/docs</p> </li> </ol>"},{"location":"contributing/#examples","title":"Examples","text":"<p>Run the examples:</p> <pre><code>cd examples\npipenv run python -m http.server 5000\n</code></pre>"},{"location":"deployment/","title":"Deployment","text":"<p>You will need to choose:</p> <ul> <li>A mailing provider</li> <li>A cloud provider</li> </ul> <p>Most mailing providers offer a generous free-tier to get started (Sendgrid, Mailjet, etc.) and allow usage via SMTP.</p> <p>Regarding cloud providers, you can start deploying with Vercel serverless platform within minutes! But any PaaS and/or Docker-compatible provider will do!</p>"},{"location":"deployment/#configuration","title":"Configuration","text":"<p>The following environment variables are available:</p>    Variable Default Format Description     <code>SENDER_EMAIL</code> <code>\"\"</code> <code>no-reply@domain.me</code> (required) E-mail address to send e-mail from   <code>TO_EMAIL</code> <code>\"\"</code> <code>contact@domain.me</code> (required) E-mail address of the recipient   <code>TO_NAME</code> <code>\"\"</code> <code>My Name</code> (required) Name of the recipient   <code>SMTP_HOST</code> <code>\"\"</code> <code>smtp.host.com</code> (required) SMTP host URL   <code>SMTP_PORT</code> <code>\"\"</code> <code>587</code> (required) SMTP host port   <code>SMTP_TLS</code> <code>\"\"</code> <code>true</code> (required) SMTP host use TLS (mutually exclusive with SSL)   <code>SMTP_SSL</code> <code>\"\"</code> <code>false</code> (required) SMTP host use SSL (mutually exclusive with TLS)   <code>SMTP_USER</code> <code>\"\"</code> <code>smtp-user</code> (required) SMTP host user   <code>SMTP_PASSWORD</code> <code>\"\"</code> <code>smtp-password</code> (required) SMTP host password (or API key)   <code>SUCCESS_REDIRECT_URL</code> <code>\"\"</code> <code>https://domain.me/contact/success</code> (optional) Redirect to this URL after an e-mail has been successfully submitted using the url-encoded form API. If not set, the default behaviour is to redirect to the <code>Origin</code> URL from the request header   <code>ERROR_REDIRECT_URL</code> <code>\"\"</code> <code>https://domain.me/contact/error</code> (optional) Redirect to this URL if an error occurred when submitting an e-mail using the url-encoded form API. If not set, the default behaviour is to redirect to the <code>Origin</code> URL from the request header   <code>FORCE_HTTPS</code> <code>'true'</code> <code>'true'</code> (optional) Force HTTPS redirect   <code>CORS_ORIGINS</code> <code>'[]'</code> <code>'[\"https://domain.me\", \"https://mydomain.me\"]'</code> (optional) List (JSON string) of authorized origins for CORS origins and Origin request header validation   <code>RECAPTCHA_SECRET_KEY</code> <code>\"\"</code> <code>string</code> (optional) Google ReCaptcha v2 secret key   <code>PGP_PUBLIC_KEY</code> <code>\"\"</code> <code>base64</code> (optional) Base64-encoded PGP public key to encrypt e-mails with before sending to SMTP backend (generate with <code>cat &lt;pub.asc&gt; \\| base64</code>)   <code>SENTRY_DSN</code> <code>\"\"</code> <code>string</code> (optional) Sentry crash reporting DSN"},{"location":"deployment/#verification","title":"Verification","text":"<p>In order to verify that <code>mailer</code> is properly deployed, go to the domain or sub-domain pointing to your deployment (e.g. <code>https://mailer.domain.me</code>).</p> <p>You should be able to display the homepage and the API documentation (e.g. <code>https://mailer.domain.me/redoc</code>). If either the homepage or the API documentation do not display properly, check the logs according to your deployment method.</p> <p>If something feels fishy, you can always post an issue on GitHub.</p>"},{"location":"deployment/#serverless-eg-vercel","title":"Serverless (e.g. Vercel)","text":"<p>The easiest way to get started with serverless deployment is to use Vercel. You will need to create a Vercel account and to install the Vercel CLI.</p> <ol> <li> <p>From the <code>mailer</code> codebase, create a new project on Vercel: <code>vercel</code></p> </li> <li> <p>Open the project in the webapp and configure required and optional environment variables    per environment (Production, Preview, Development):</p> </li> <li> <p><code>SENDER_EMAIL</code></p> </li> <li><code>TO_EMAIL</code></li> <li><code>TO_NAME</code></li> <li><code>SMTP_HOST</code></li> <li><code>SMTP_PORT</code></li> <li><code>SMTP_TLS</code></li> <li><code>SMTP_SSL</code></li> <li><code>SMTP_USER</code></li> <li> <p><code>SMTP_PASSWORD</code></p> </li> <li> <p>Deploy to preview environment:</p> </li> </ol> <pre><code>vercel\n</code></pre> <ol> <li>Deploy to production environment:</li> </ol> <pre><code>vercel --prod\n</code></pre>"},{"location":"deployment/#paas-eg-heroku-clevercloud","title":"PaaS (e.g. Heroku, CleverCloud)","text":"<p>The easiest way to get started with PaaS deployment is to use Heroku. You will need to create a Heroku account and to install the Heroku CLI.</p> <ol> <li> <p>Create a project on the Heroku dashboard and add your configuration in environment variables</p> </li> <li> <p>Login to Heroku: <code>heroku login</code></p> </li> <li> <p>From the <code>mailer</code> codebase, add the Git remote: <code>heroku git:remote -a &lt;my-mailer-app&gt;</code></p> </li> <li> <p>Deploy: <code>git push heroku master:master</code></p> </li> </ol> <p>Or you can also use the containerized version!</p>"},{"location":"deployment/#docker","title":"Docker","text":"<p>The Docker image is publicly available on Docker Hub.</p> <p>All stable versions are automatically deployed and available after each release. The <code>latest</code> tag will allow to retrieve non-stable changes</p> <p>If you want to quickly try the Docker image:</p> <pre><code>docker run --env-file .env -p 5000:5000 rmnclmnt/mailer:latest\n</code></pre>"},{"location":"deployment/#vps","title":"VPS","text":"<p>If you're feeling nerdy or a bit old-school, you are more than welcome to deploy <code>mailer</code> using a standard VPS from any cloud provider (AWS, OVH, etc.).</p> <p>We still recommend you deploy <code>mailer</code> using the provided Docker image for reproducibility reasons.</p> <p>This kind of deployment will also require some extra steps, such as setting up:</p> <ul> <li>A reverse-proxy link Nginx</li> <li>Automatic SSL/TLS certificate generation using Let's Encrypt</li> <li>A firewall with sensitive rules (only allow ports 80 and 443)</li> <li>Security policies (only allow SSH access using public key, disable root user over SSH, etc.)</li> <li>External intrusion protection using fail2ban</li> <li>etc.</li> </ul> <p>If you do not know (nor want to know) how to perform this kind of setup, use more developer-friendly deployment options!</p>"},{"location":"usage/","title":"Usage","text":"<p>Once <code>mailer</code> is deployed, either on your own custom domain or locally, you can start receiving e-mails, using a URL-encoded or an AJAX request.</p> <p>Given that these features are enabled with your deployment, the following options are available:</p> <ul> <li>Google ReCaptcha v2: make sure only your domains can send e-mails through <code>mailer</code></li> <li>PGP public key attachment: so that you can respond with end-to-end encryption to your contacts!</li> </ul>"},{"location":"usage/#parameters","title":"Parameters","text":"<p>You can find the documentation for the request parameters in the API documention of your deployment (e.g. <code>https://mailer.domain.me/redoc</code>).</p>    Variable Default Format Description     <code>name</code> <code>\"\"</code> <code>string, max length: 50</code> (required) Name of the contact sending the message   <code>email</code> <code>\"\"</code> <code>string, valid e-mail</code> (required) E-mail of the contact sending the message   <code>subject</code> <code>\"\"</code> <code>string, max length: 100</code> (required) Subject of the message to send   <code>message</code> <code>\"\"</code> <code>string, max length: 1000</code> (required) Body of the message to send   <code>honeypot</code> <code>\"\"</code> <code>string, empty</code> (required) Body of the message to send   <code>g-recaptcha-response</code> <code>\"\"</code> <code>string</code> (optional) Google ReCaptcha v2 response   <code>public_key</code> <code>\"\"</code> <code>string</code> (optional) PGP public key of the contact sending the message"},{"location":"usage/#headers","title":"Headers","text":"<p>When using AJAX requests, make sure the <code>Origin</code> header matches one of the domains specified in the <code>CORS_ORIGINS</code> configuration of your deployment.</p>"},{"location":"usage/#html-form","title":"HTML Form","text":"<p>Using a standard HTML form to perform an URL-encoded request:</p> <pre><code>&lt;form action=\"https://mailer.domain.me/api/mail/form\" method=\"POST\"&gt;\n  &lt;label for=\"name\"&gt;Name&lt;/label&gt;\n  &lt;input type=\"text\" id=\"name\" name=\"name\" /&gt;\n  &lt;br /&gt;\n  &lt;label for=\"email\"&gt;E-mail&lt;/label&gt;\n  &lt;input type=\"email\" id=\"email\" name=\"email\" /&gt;\n  &lt;br /&gt;\n  &lt;label for=\"subject\"&gt;Subject&lt;/label&gt;\n  &lt;input type=\"text\" id=\"subject\" name=\"subject\" /&gt;\n  &lt;br /&gt;\n  &lt;label for=\"message\"&gt;Message&lt;/label&gt;\n  &lt;input type=\"text\" id=\"message\" name=\"message\" /&gt;\n  &lt;br /&gt;\n  &lt;input type=\"hidden\" id=\"honeypot\" name=\"honeypot\" /&gt;\n  &lt;input type=\"submit\" value=\"Send\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"usage/#fetch-api","title":"Fetch API","text":"<p>Using the Fetch API to perform an AJAX request:</p> <pre><code>fetch(\"https://mailer.domain.me/api/mail\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify({\n    email: \"john@doe.com\",\n    name: \"John Doe\",\n    subject: \"Contact\",\n    message: \"Hey there! Up for a coffee?\",\n    \"g-recaptcha-response\": \"azertyuiopqsdfghjklmwxcvbn\",\n    public_key:\n      \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n...\\n-----END PGP PUBLIC KEY BLOCK-----\\n\",\n    honeypot: \"\",\n  }),\n});\n</code></pre>"},{"location":"usage/#axios","title":"Axios","text":"<p>Using Axios to perform an AJAX request:</p> <pre><code>axios.post(\"https://mailer.domain.me/api/mail\", {\n  email: \"john@doe.com\",\n  name: \"John Doe\",\n  subject: \"Contact\",\n  message: \"Hey there! Up for a coffee?\",\n  \"g-recaptcha-response\": \"azertyuiopqsdfghjklmwxcvbn\",\n  public_key:\n    \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n...\\n-----END PGP PUBLIC KEY BLOCK-----\\n\",\n  honeypot: \"\",\n});\n</code></pre>"},{"location":"usage/#examples","title":"Examples","text":"<p>Explore ready-to-use examples to demonstrate how to use <code>mailer</code> in the <code>docs/examples</code> folder.</p> <p>To run the examples properly, do not just open the <code>.html</code> files, but be sure to server them with a basic HTTP server, for instance:</p> <pre><code>python -m http.server &lt;port&gt;\n</code></pre> <p>The reason for this requirement is that if you enable CORS protection on <code>mailer</code>, opening files directly in a web-browser will not set the <code>Origin</code> header properly, thus all requests will fail.</p> <p>Be sure to configure and run an instance of <code>mailer</code> before using them!</p> <ul> <li>Simple AJAX form</li> <li>Simple AJAX form with Google ReCaptcha</li> <li>Simple AJAX form with PGP encryption</li> </ul>"}]}